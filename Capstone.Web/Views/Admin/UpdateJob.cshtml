@using Capstone.Business
@using Common.Enumerations
@model Common.Model.JobSkillsVM

@{
    ViewBag.Title = "Update Job";
    var user = Session["user"] as Common.Model.UserViewModel;
    if (user == null || user.UserType != "Admin")
    {
        Response.Redirect("~/LoginAccount/Index");
    }
}

<h2>Update Job</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Job</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row justify-content-center">
            <div class="col-4">

                <div class="form-group">
                    <div class="col">
                        <label>Career Path</label>
                        &nbsp;@Html.DropDownListFor(model => model.CareerPath, new SelectList( Enum.GetNames(typeof(CareerPath)), Model.CareerPath) , new { htmlAttributes = new { @class = "form-control" } })
                        <br /> @Html.ValidationMessageFor(model => model.CareerPath, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col">
                        <label>Job Title</label>
                        @Html.EditorFor(model => model.JobTitle, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.JobTitle, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col">
                        <label>Company</label>
                        @Html.EditorFor(model => model.Company, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Company, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col">
                        <label>Job Type</label>
                        @Html.EditorFor(model => model.JobType, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.JobType, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col">
                        <label>Reference #</label>
                        @Html.EditorFor(model => model.JobRef, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.JobRef, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col" style="line-height: 1.6;">
                        <label>Description</label><br />
                        @Html.TextAreaFor(model => model.JobDesc, 8, 60, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.JobDesc, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <label>Required Skills</label><br />
                <ul id="skills" class="list-group w-75" style="height: 600px; line-height:1.6; overflow:scroll;">

                    @for (int i = 0; i < Model.RequiredSkills.Count; i++)
                    {
                        <li class="list-group-item m-1">
                            @Html.HiddenFor(m => m.RequiredSkills[i].SkillId)
                            @Html.EditorFor(m => m.RequiredSkills[i].isChecked)
                            &nbsp;@Html.DisplayFor(m => m.RequiredSkills[i].SkillName)
                        </li>
                    }

                </ul>
            </div>
        </div>

        <div class="form-group" style="margin-left:45%;">
            <div class="col-md-10">
                <input type="submit" value="Submit" class="btn btn-primary" />
            </div>
        </div>

    </div>

}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
